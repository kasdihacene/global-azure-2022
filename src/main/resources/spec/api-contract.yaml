openapi: 3.0.0
servers: [ ]
info:
  description: Generated API - contract First social network
  version: "1.0.0"
  title: Contract first API - Laboratoire 2021 (social network)
  contact:
    email: hacene.kasdi@lacombedulienvert.fr
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: cloud_native_app, cloud_native_app_upload

paths:
  /v1/tweets/{numberOfTweets}:
    get:
      tags:
        - cloud_native_app
      summary: Get the published posts
      operationId: getAllPosts
      description: Fetch all published posts
      parameters:
        - name: numberOfTweets
          in: path
          description: Number of tweets to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPost'

  /v1/error:
    get:
      tags:
        - cloud_native_app
      summary: Generate 5xx error
      operationId: generateError
      description: Get some error
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object

  /v2/upload:
    post:
      tags:
        - cloud_native_app_upload
      summary: Upload document to Azure Storage
      operationId: uploadDocument
      description: Upload multipart file scenario
      requestBody:
        content:
          multipart/form-data: # Media type
            schema: # Request payload
              type: object
              properties: # Request parts
                document:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

components:
  schemas:
    UserPost:
      type: object
      properties:
        userId:
          type: integer
        id:
          type: integer
        title:
          type: string
        body:
          type: string
    UploadResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string